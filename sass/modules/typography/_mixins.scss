@use '../../abstracts' as abstract;

@mixin base {
	body {
		font-family: var(--font-family-text);
		font-weight: var(--font-weight-text);
		color: var(--text-color);
		line-height: var(--font-line-height);
	}

	code {
		font-family: var(--font-family-code);
		font-weight: var(--font-weight-code);
		color: var(--code-color);
		line-height: var(--font-line-height);
	}

	small {
		font-size: var(--small-size);
	}
}

@mixin base-titles($name) {
	font-family: var(--font-family-#{$name});
	font-weight: var(--font-weight-#{$name});
	line-height: var(--#{$name}-line-height);
	color: var(--#{$name}-color);
}

@mixin heading {
	@for $i from 1 through 6 {
		@at-root {
			h#{$i},
			#{&}#{$i},
			#{&}eading-#{$i} {
				font-size: var(--heading-#{$i});
			}
		}
	}
}

@mixin heading-responsive {
	@for $i from 1 through 6 {
		&#{$i},
		&eading-#{$i} {
			font-size: var(--heading-#{$i});
		}
	}
}

$range-display: ('xl', 'lg', 'md', 'sm', 'xs');

@mixin display {
	@each $size in $range-display {
		&-#{$size} {
			font-size: var(--display-#{$size});
		}
	}
}

$range-title: ('xl', 'lg', 'md', 'sm', 'xs');

@mixin title {
	@each $size in $range-title {
		&-#{$size} {
			font-size: var(--title-#{$size});
		}
	}
}

$range-text: ('xl', 'lg', 'md', 'sm', 'xs');

@mixin font-size {
	@each $size in $range-text {
		@at-root {
			&-size-#{$size} {
				font-size: var(--font-size-#{$size});
			}
		}
	}
}

@mixin font-weight {
	&-weight {
		&-100,
		&-thin {
			font-weight: 100;
		}

		&-200,
		&-extra-light {
			font-weight: 200;
		}

		&-300,
		&-light {
			font-weight: 300;
		}

		&-400,
		&-regular {
			font-weight: 400;
		}

		&-500,
		&-medium {
			font-weight: 500;
		}

		&-600,
		&-semi-bold {
			font-weight: 600;
		}

		&-700,
		&-bold {
			font-weight: 700;
		}

		&-800,
		&-extra-bold {
			font-weight: 800;
		}

		&-900,
		&-black {
			font-weight: 900;
		}

		&-1000,
		&-weight {
			font-weight: 1000;
		}
	}
}

@mixin font-style {
	@include abstract.property-name(style, font-style, normal, italic, oblique);
}

@mixin text-decoration {
	@include abstract.property-name(decoration, text-decoration, none, underline, overline, line-through);
}

@mixin text-transform {
	@include abstract.property-name(transform, none, capitalize, uppercase, lowercase, full-width, full-size-kana);
}

@mixin line-height {
	&-none {
		line-height: 1;
	}
	&-default {
		line-height: var(--font-line-height);
	}
}

// Mixin text align
@mixin text-align {
	@include abstract.property-name(align, text-align, left, center, right);
}

//#region Responsive
// Mixin respons√°vel por agrupar todos os mixins acima mas com o prefixo de responsivo

@mixin responsive($breakpoint) {
	@include abstract.responsive-class(false, $breakpoint, 'h') {
		@include heading-responsive;
	}
	@include abstract.responsive-class(false, $breakpoint, 'display') {
		@include display;
	}
	@include abstract.responsive-class(false, $breakpoint, 'title') {
		@include title;
	}
	@include abstract.responsive-class(false, $breakpoint, 'font') {
		@include font-size;
		@include font-style;
		@include font-weight;
	}
	@include abstract.responsive-class(false, $breakpoint, 'text') {
		@include text-align;
		@include text-decoration;
		@include text-transform;
	}
	@include abstract.responsive-class(false, $breakpoint, 'line-height') {
		@include line-height;
	}
}
//#endregion
